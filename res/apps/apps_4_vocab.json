{
    "identifier": [
        "col_lower",
        "io",
        "graph",
        "guessingGame",
        "W",
        "isproductsatisfied",
        "ps",
        "smileys",
        "b_s",
        "mouths",
        "WORDS",
        "med",
        "pred",
        "ele",
        "bseven",
        "ud",
        "switcher",
        "xl",
        "dep",
        "pt1",
        "inv_fact",
        "cnt_1",
        "age4",
        "sorted_books",
        "agts",
        "MAP",
        "got",
        "genuine_c",
        "depth",
        "next_plus",
        "max_left",
        "atype",
        "yl",
        "s2",
        "DEC",
        "posNext",
        "color_points",
        "flg",
        "superPow",
        "descendList",
        "IF",
        "final7",
        "IS",
        "gl",
        "check1",
        "positive_num",
        "split",
        "new",
        "List",
        "initialArray",
        "cj",
        "thresh",
        "MENU",
        "l_out",
        "elNum",
        "sum_c",
        "xa",
        "soln",
        "listEven",
        "lt_a",
        "generator",
        "indexer",
        "age7",
        "getvalues",
        "ri",
        "prm",
        "rstrip",
        "max_idx",
        "fin",
        "abs",
        "dicta",
        "ni",
        "ch1",
        "zero_idx",
        "hollow_triangle",
        "heappush",
        "decrement_volume",
        "numEs",
        "r2",
        "zip",
        "maximum",
        "revc",
        "__starting_point",
        "content_aux",
        "next_pos",
        "CLyr",
        "num2words",
        "keys",
        "bit_length",
        "repr",
        "ascendList",
        "logical_or",
        "qc",
        "c_bool",
        "make_parent",
        "qw",
        "my_list",
        "prod",
        "is_integer",
        "c_depth",
        "l2s",
        "side",
        "ya",
        "tmax",
        "file",
        "q",
        "afts",
        "arr_k",
        "n_j",
        "prev",
        "coor_sibs",
        "per_month",
        "outa",
        "color_probability",
        "translate",
        "duff",
        "lsoint",
        "combinations",
        "primeList",
        "edges",
        "_bfs",
        "is_descending",
        "argv",
        "dct",
        "_t",
        "invalid",
        "vp",
        "parent_2kk1",
        "end",
        "second",
        "d1",
        "color_count",
        "sort2",
        "s_to_i",
        "det",
        "ball",
        "b",
        "sigma",
        "mylist",
        "not_rob_node_right",
        "unionSet",
        "dj",
        "buf",
        "p1",
        "robSub",
        "play",
        "smp",
        "points_colors",
        "ctri",
        "dhmin",
        "imax",
        "all_i",
        "cond_3",
        "vmax",
        "mp",
        "final_list",
        "five",
        "prime_product",
        "nupper",
        "threshold_in_ml",
        "mylist1",
        "casefold",
        "gosa",
        "new_str",
        "apply_query",
        "directions",
        "calendar",
        "kprv",
        "starmap",
        "is_obtained",
        "dtype",
        "ii",
        "read_int",
        "beven",
        "dp",
        "test",
        "INT",
        "CHARACTERs",
        "acc",
        "ss",
        "upper",
        "coor_bottoms",
        "heappop",
        "delta_value",
        "vstr",
        "percentage_to_ml",
        "tour_d_arr",
        "bad",
        "months",
        "a_value",
        "age5",
        "actual1",
        "mashfuck",
        "NM",
        "ak",
        "max_right",
        "seg",
        "int_to_en",
        "diff1",
        "tovisit",
        "nCr_mod",
        "matching_indexes",
        "a_l",
        "tour",
        "grouped",
        "LF",
        "d2",
        "to_sort",
        "brr",
        "idx_tuple",
        "arr",
        "peek",
        "cheaters",
        "pd",
        "rsum",
        "pmax",
        "read_case",
        "Lyr",
        "goodTriple",
        "l_arr",
        "iVFirsts",
        "is_valid",
        "arr_2",
        "right",
        "chameleons",
        "choices",
        "prev_yrs",
        "code2",
        "anslen",
        "list_d",
        "n_good",
        "num2alpha",
        "p_left",
        "ix",
        "res_len",
        "tbl",
        "false",
        "sarr",
        "layers",
        "rr",
        "reversed",
        "groupby",
        "defect1G",
        "VI",
        "counts_bigger_equal_curr_citation",
        "citations",
        "ij_pairs",
        "vmin",
        "prefix",
        "score",
        "countTriplets",
        "base5",
        "day_count",
        "middle",
        "block_end",
        "age",
        "next_term",
        "in_",
        "msg0",
        "CSize",
        "collinear",
        "progresses",
        "bin_s",
        "is_part_and_parcel",
        "maxProduct",
        "premin",
        "cnt_0",
        "age_6",
        "ILCF",
        "added_squared_list",
        "mid",
        "numPow2",
        "other",
        "bit",
        "check_b",
        "sum_d",
        "ans_next_pos",
        "ans_letter",
        "url",
        "plagis",
        "s_cost",
        "g",
        "percent",
        "nmb",
        "es",
        "key_func",
        "lenA",
        "moves",
        "Ans",
        "ANS",
        "low1st",
        "a2n",
        "ty",
        "inele",
        "outOfIndex",
        "it",
        "decoded",
        "cum",
        "nb",
        "goodPairs",
        "age_8",
        "tread",
        "sort1",
        "f2",
        "reloaded",
        "get_highest_possible_score",
        "lenb",
        "done",
        "edit_permut",
        "special",
        "true",
        "isGood",
        "posNexts",
        "toBeRoot",
        "result_string",
        "xor",
        "make_list",
        "lenAns",
        "number_converter",
        "rw",
        "EDGE",
        "uplast",
        "spread",
        "ac1",
        "lines",
        "lower",
        "length",
        "set",
        "test_matrices",
        "minV",
        "text",
        "percent_convert",
        "_bots",
        "girls",
        "sqrt_m",
        "countGoodTriplets",
        "LIST",
        "prevs",
        "largestPalindrome",
        "x",
        "age_list",
        "cc",
        "ones",
        "rb",
        "path",
        "ds",
        "word_length",
        "m1",
        "number",
        "diff3",
        "can_rob",
        "get",
        "dicto",
        "n_d",
        "hyp",
        "perc_per_day",
        "numOperations",
        "boost",
        "L",
        "readCoordinates",
        "list_a",
        "sw",
        "compu",
        "comp",
        "tour_d",
        "remove_chars",
        "populate_dict",
        "cmp",
        "step",
        "alternative",
        "isprime",
        "set1",
        "x1",
        "good_trip",
        "Tree",
        "deg1",
        "first",
        "chr",
        "ey",
        "max_can_not_shoot",
        "minalph",
        "pi",
        "rightmatch",
        "letter",
        "v2",
        "nxt",
        "coefficient",
        "move",
        "testCase",
        "water",
        "bisect",
        "final4",
        "cita",
        "_cache",
        "iSt",
        "solution",
        "iEn",
        "ranks",
        "diffs",
        "yds",
        "querys",
        "sayi",
        "linalg",
        "rmq",
        "du",
        "points",
        "fill",
        "bfts",
        "nex",
        "delete",
        "pars",
        "show",
        "read_index",
        "hIndex",
        "ct",
        "tests",
        "dp_min",
        "uvlen",
        "mx",
        "rec",
        "curmax",
        "plagplayers",
        "C_LENGTH",
        "num_in_words",
        "bot_idx",
        "yield_value",
        "pentabonacci",
        "lim1",
        "union_set",
        "empty",
        "ev",
        "kp",
        "a4",
        "a6",
        "translations",
        "hmin",
        "mh",
        "iST",
        "get_diagonale_code",
        "sgn",
        "zfill",
        "second_half",
        "uvsum",
        "ys",
        "bltf",
        "LS",
        "fmax",
        "alph",
        "Y",
        "passesMillerRabinTest",
        "wrapper",
        "a_h",
        "lowerfill",
        "csoint",
        "weird",
        "QUE2",
        "Menu",
        "streak",
        "yli",
        "oi",
        "gameOver",
        "val",
        "max_prod_left",
        "chef",
        "size_arr",
        "as_start",
        "sum_",
        "functools",
        "texture_match_number",
        "dict_b",
        "row",
        "total_good_triplets",
        "object",
        "min",
        "iter",
        "ceil",
        "cubes",
        "str_set",
        "age_7",
        "sin",
        "binascii",
        "digs",
        "num2_pots",
        "a8",
        "initial_first_step_of_j",
        "rob_node_right",
        "ar",
        "isAfter",
        "dequeue",
        "negative",
        "is_below_threshold",
        "accumulate",
        "allcol",
        "dist_uv",
        "bi",
        "MONTHS_DCT",
        "num3",
        "ot",
        "ntmp",
        "small",
        "le",
        "codes",
        "b64decode",
        "seg_el",
        "charCounts",
        "sumi",
        "fillvalue",
        "sc",
        "product",
        "res3",
        "six",
        "korfuck",
        "arrj",
        "add_edge",
        "rs",
        "TAST",
        "dcary",
        "asc",
        "pair",
        "yard",
        "self_par",
        "_i",
        "ok_b",
        "t3",
        "changer",
        "smiley",
        "modif",
        "square",
        "goodies",
        "read_str",
        "tripleIsGood",
        "lca_memo",
        "sumofages",
        "n_tri",
        "percent_change",
        "subseq",
        "dp1",
        "used",
        "_dropped",
        "base",
        "floats",
        "prod_left",
        "prtp",
        "NO",
        "term",
        "__repr__",
        "kooka_counter",
        "contentLeft",
        "que",
        "sorted_textbook",
        "prevSel",
        "strr",
        "dest",
        "getfromdictt",
        "temp",
        "b6",
        "mag",
        "aLess",
        "str_base",
        "new_string",
        "P",
        "ki",
        "sofloat",
        "value",
        "a_origin",
        "widx",
        "read_func",
        "eqcost",
        "iterative_climbStairs",
        "nm",
        "sum_no_duplicates",
        "ok",
        "process_query",
        "iIV",
        "numPermsDISequence",
        "update",
        "most",
        "arr_down",
        "isdecimal",
        "sol",
        "total",
        "sqrt",
        "maxx",
        "C_SUM",
        "range",
        "ans",
        "imin",
        "binary_search",
        "max_v",
        "dict",
        "getl",
        "each_muliply_itself",
        "is_even",
        "num_elems",
        "find",
        "output_list",
        "maxTrap",
        "recover",
        "Queries",
        "NumOfTests",
        "se",
        "lowBuffer",
        "con",
        "chunk",
        "modular_pow",
        "ls",
        "Rem",
        "SAMPLE_ANS",
        "input_tuple",
        "ydx",
        "b_bool",
        "children",
        "xe",
        "a3",
        "age_3",
        "matrix",
        "min_pos",
        "strip",
        "ic2",
        "function1",
        "min_perfect_square",
        "fermatb",
        "myf",
        "compiler",
        "next",
        "D",
        "size",
        "jk",
        "unpush",
        "islower",
        "mult_list",
        "history",
        "texture_match_list",
        "leng",
        "Yes",
        "DisjointSet",
        "parent_2kk",
        "moji",
        "log10",
        "negtive_num",
        "put",
        "nseven",
        "fibo",
        "map",
        "ILI",
        "v_queries",
        "rinput",
        "ret",
        "critical_amount",
        "min_c",
        "rows",
        "list_sum",
        "_pushed",
        "setdefault",
        "a5",
        "remain",
        "sib_idx",
        "eval",
        "determinant",
        "picks",
        "total_water",
        "leftstr",
        "f1",
        "u",
        "month_name",
        "L_1",
        "uc",
        "p2D",
        "n1",
        "triangle",
        "root",
        "sp",
        "bracket_pairs",
        "curr_max",
        "go",
        "nv",
        "later",
        "ok_c",
        "bin",
        "next_index",
        "idx",
        "lst2",
        "countB",
        "group",
        "swp",
        "tup_a",
        "age_multiplied_and_added",
        "bool_array",
        "sieve",
        "a0",
        "updates",
        "Num",
        "resolve",
        "heapq",
        "check3",
        "ELIST",
        "dpt",
        "tb",
        "ilosc",
        "rob2",
        "level_max",
        "meets",
        "further_valleys",
        "SegmentTree",
        "isPrime",
        "required",
        "_new",
        "int",
        "args",
        "min_content",
        "English",
        "currentLt",
        "arrsize",
        "KOEF",
        "testcases",
        "trans",
        "item",
        "smallalphas",
        "summ",
        "with_right",
        "phrases",
        "area",
        "e_p_d",
        "pr",
        "LCA",
        "dep_s",
        "defect2G",
        "colors_max_count",
        "need",
        "__lt__",
        "fout",
        "new_arr",
        "str_",
        "op_list",
        "countG",
        "MS",
        "res_key",
        "c_s",
        "ln",
        "strings",
        "not_found",
        "mylist2",
        "vsum",
        "goods",
        "tolist",
        "ng",
        "listtemp",
        "loc_min",
        "takewhile",
        "main0",
        "not_rob_root",
        "vc",
        "maxlen",
        "N0",
        "sk",
        "LI",
        "deq",
        "half1",
        "goodA",
        "odd",
        "maxLeft",
        "max_colored",
        "initial_last_step_of_i",
        "s_visited",
        "rounding",
        "intx",
        "ij_idx",
        "stk",
        "firstVisited",
        "ma",
        "csofloat",
        "op",
        "lim2",
        "mozi",
        "lookup",
        "original",
        "itr",
        "qk",
        "var1",
        "tri",
        "revArrS",
        "task",
        "plgrsm",
        "listsplit",
        "SAMPLE_IN",
        "arrange",
        "CL",
        "ord_a",
        "operation_func",
        "counts_1",
        "ysmm",
        "isRoot",
        "th",
        "alpha_list",
        "process",
        "limit",
        "b_string",
        "cur_len",
        "sumo",
        "lru_cache",
        "s",
        "first_half",
        "perc",
        "turn_off_level",
        "vis",
        "target_games",
        "minHeight",
        "long_prifix",
        "da",
        "np",
        "v_par",
        "ipt",
        "n2a",
        "dec",
        "st",
        "k1",
        "euler_tour",
        "ascii_lowercase",
        "vol",
        "listik",
        "sliced",
        "penta_fib_table",
        "lp",
        "stop",
        "R",
        "__call__",
        "scramble",
        "threshold",
        "read_values",
        "arrdsc",
        "set_indicators",
        "max_level",
        "lstrip",
        "trappable",
        "string_of_number",
        "BG",
        "total_width",
        "solve_case",
        "arr_up",
        "did_we_win",
        "printe",
        "case",
        "el",
        "id_",
        "results",
        "maxNeg",
        "pwrOfTwo",
        "age3",
        "geti",
        "ascii_letters",
        "pj",
        "abc",
        "num_good_triplets",
        "nind",
        "permut",
        "den",
        "compares",
        "color_triangle_count",
        "rest",
        "bottom",
        "child",
        "hatsu",
        "get_empty_per_level",
        "new_s",
        "incrs",
        "absolute",
        "has_parent",
        "to_meet",
        "getValue",
        "unum",
        "deletes",
        "odd_terms",
        "msg1",
        "q_evap_per_day",
        "edge_set",
        "qq",
        "id",
        "strDir",
        "len_s",
        "strX",
        "drop_max",
        "number_string",
        "costs",
        "trsh",
        "disp",
        "laughing",
        "perc_th",
        "LTOS",
        "round_answer",
        "zero",
        "init",
        "maxsize",
        "M0",
        "remadd",
        "multiply",
        "curmin",
        "query",
        "QUE",
        "remove",
        "inp",
        "b_l",
        "dx",
        "values",
        "l2",
        "h",
        "one",
        "default",
        "read_lines",
        "a_or_d",
        "lt",
        "hs",
        "ic_min",
        "cheffun",
        "ree",
        "MOVES",
        "ncol",
        "b2",
        "rob1",
        "fv",
        "crossProd",
        "u_idx",
        "cx",
        "tp",
        "superrob",
        "cycle",
        "pre",
        "shape",
        "dya",
        "xyz",
        "apple",
        "steps",
        "grp",
        "stacks",
        "pointer2",
        "opt",
        "arr_i",
        "ageList",
        "list4d",
        "reduce",
        "makeSet",
        "elem_list",
        "tot",
        "ans_len",
        "vnum",
        "inputs",
        "qi",
        "heights",
        "checkGood",
        "write",
        "prev_level",
        "cmd",
        "win",
        "min1",
        "xyuv",
        "listOdd",
        "character",
        "times",
        "code",
        "walk",
        "sorted_ci",
        "dxs",
        "isContinuing",
        "waterTrapped",
        "with_left",
        "md",
        "e",
        "aSev",
        "func",
        "ages1",
        "tup",
        "total_triplets",
        "Error",
        "len",
        "f",
        "key",
        "pot_num2",
        "minDeletionSize",
        "pref",
        "lsofloat",
        "gets",
        "text_books",
        "jk_pairs",
        "v_to_i",
        "leftMaxima",
        "a_s",
        "tmp_dists",
        "w",
        "first_idx",
        "rl",
        "COST",
        "i1",
        "ary0",
        "I",
        "without_left",
        "substring_set",
        "AST",
        "bisect_right",
        "flipleftmatch",
        "terms",
        "rob",
        "aFor",
        "count_0",
        "itertools",
        "goodcount",
        "all_triplets",
        "board",
        "Exception",
        "thresholdper",
        "mouth",
        "MAX",
        "min_p",
        "step5",
        "match",
        "starting_list",
        "condition2",
        "iinput",
        "vv",
        "ints",
        "dep_l",
        "read_lists",
        "chain",
        "od",
        "dxe",
        "fibonacci",
        "find_repeat",
        "function",
        "non_elig",
        "in_k",
        "dfs1",
        "TypeError",
        "stdout",
        "delNodes",
        "decode_adfly",
        "gcount",
        "digits",
        "dict_keys_sort",
        "lsum",
        "Solution",
        "sumf",
        "books",
        "EULER",
        "right_yield_f",
        "thresh_quant",
        "diff2",
        "Numy",
        "DEPTH",
        "other_color",
        "K",
        "B",
        "first_appear",
        "dis",
        "left_yield_t",
        "ans_size",
        "cond_2",
        "point_list",
        "level",
        "Query",
        "dont_take",
        "setInit",
        "dirTable",
        "phi",
        "decorated_trees",
        "xy",
        "square_root_result",
        "arrS",
        "ic",
        "isOdd",
        "nx",
        "helper",
        "l2d",
        "count_",
        "real_cnt1",
        "k",
        "nextmag",
        "block_start",
        "condition",
        "age_2",
        "read_str_list",
        "elig_scholar",
        "dS",
        "q_threshold",
        "goal",
        "fours",
        "stg",
        "mc",
        "lrd",
        "ik_count",
        "__init__",
        "texture",
        "depth_u",
        "descending",
        "Edges",
        "recurse",
        "all_char_sequence_start_pos",
        "overall",
        "squared",
        "my_sort",
        "total_dist",
        "LOG_N",
        "ops",
        "tup_list",
        "array_n",
        "lower_case_textbooks",
        "n_day_expire",
        "cond_1",
        "initial_volume",
        "combs",
        "LI_",
        "ROUND_DOWN",
        "non_subseq_len",
        "dv",
        "part_cheat",
        "max_n",
        "b_f",
        "is_sorted_and_how",
        "cup_volume",
        "intersection",
        "USED",
        "partial",
        "r1",
        "g1",
        "STONES",
        "bans",
        "new_tovisit",
        "front",
        "get_order",
        "item1",
        "setrecursionlimit",
        "prob_mapper",
        "lnew",
        "tt",
        "parent_to_root",
        "chef_val",
        "_d",
        "is_triangle",
        "book",
        "increment",
        "cur_op",
        "as_a_perfect_square",
        "arg",
        "menu",
        "dist",
        "base_parity",
        "a_string",
        "ac2",
        "critical",
        "coor",
        "IINF",
        "temp2",
        "attempt1",
        "rightMaxima",
        "notOnSameLine",
        "curr_delete",
        "startswith",
        "swapcase",
        "width",
        "push",
        "scount",
        "b0",
        "right_p",
        "m0",
        "n_i",
        "popitem",
        "log",
        "prt",
        "suma",
        "is_square",
        "cpts",
        "al",
        "wsum",
        "uvnum",
        "new_content",
        "korabel",
        "new_ages",
        "coef",
        "link",
        "op_counter",
        "A2",
        "boo",
        "solns",
        "max_term",
        "ny",
        "textbook",
        "countGoodTripletsCase2",
        "LLI",
        "H",
        "ik_ids",
        "midpoint",
        "nc",
        "cumadds",
        "total_count",
        "comb1",
        "number_word",
        "drop_min",
        "geven",
        "_binOpe",
        "defectG",
        "cost",
        "fromkeys",
        "getenv",
        "l_results",
        "ran",
        "e0",
        "prod_right",
        "findSet",
        "alpha_list_last",
        "in_i",
        "sums",
        "xli",
        "fact",
        "aa",
        "MONTHS",
        "db",
        "digit",
        "Numz",
        "iVColors",
        "eight",
        "comb_points",
        "os",
        "No",
        "isScramble",
        "is_substr",
        "tks",
        "sofloats",
        "counter_",
        "alphabetlist",
        "encoding",
        "time",
        "old_level",
        "lenArray",
        "cnt",
        "translation",
        "cand",
        "curr",
        "position",
        "printi",
        "br",
        "cmp_to_key",
        "components",
        "num1",
        "YES",
        "soints",
        "MAXP",
        "goodTriplet",
        "eular",
        "ex",
        "par",
        "k_string",
        "genRail",
        "lastap",
        "hmax",
        "array",
        "j2",
        "maxi",
        "stringNum",
        "preplayers",
        "LINF",
        "rightstr",
        "lennew",
        "wordLen",
        "TreeNode",
        "qv",
        "mn",
        "maxPos",
        "a1",
        "type",
        "collide_coord",
        "nearest",
        "books_lowcase",
        "defect1B",
        "todo",
        "a_dict",
        "avg",
        "l_in",
        "PRIMES_LIST",
        "good_triplet_count",
        "matched",
        "afour",
        "maxthresh",
        "check2",
        "four",
        "__class__",
        "return_arr",
        "days",
        "xi",
        "gans",
        "climbStairs",
        "SegmentTree1",
        "age_4",
        "box",
        "s_vertex",
        "lcm",
        "lcs",
        "minind",
        "pv",
        "sz",
        "la",
        "ch",
        "nt",
        "sb_primes",
        "arr_dict",
        "best",
        "currH",
        "sm",
        "rsplit",
        "rob_node_left",
        "available_left_arrow",
        "aseven",
        "reverse",
        "chakra",
        "boys",
        "counter",
        "dict_c",
        "buckets",
        "anss",
        "length_of_number",
        "num_queries",
        "LENG",
        "repetitive",
        "math",
        "depth_list",
        "rob_root",
        "result",
        "getdiff",
        "psum",
        "word",
        "compress",
        "upperfill",
        "adFly_decoder",
        "depth_from_root",
        "char",
        "lor",
        "l_rem",
        "removeDuplicates",
        "a_m",
        "data",
        "make_get_patterns",
        "yummy",
        "allow",
        "percent_of_content",
        "sqrt_n",
        "numberOfBars",
        "sc1",
        "mod",
        "last_odd",
        "letter_idx",
        "res2",
        "root_deleted",
        "open_indexes",
        "condition3",
        "cf",
        "lt_c",
        "chars",
        "distNew",
        "putindictt",
        "den2",
        "findall",
        "_content",
        "vidx",
        "good_count",
        "bisect_point",
        "col",
        "min_v",
        "c",
        "color_appear",
        "parent_delete",
        "euler_depth_topo",
        "fw",
        "msg",
        "ns",
        "V",
        "point_count",
        "min_len",
        "DP",
        "EPR",
        "stack",
        "pointer3",
        "table",
        "check_c",
        "binpow",
        "weight",
        "searchsorted",
        "largestproduct",
        "ca",
        "calc_min_len",
        "odd_digs",
        "color",
        "leftmaxes",
        "bfs",
        "arr_len",
        "fin7",
        "defectB",
        "distance_from_root",
        "depths",
        "get_set",
        "analyze",
        "smallest",
        "filllower",
        "aux",
        "offset",
        "parent_deleted",
        "ne",
        "lt_b",
        "contains",
        "max_count",
        "age_multiplied_and_added_and_squared",
        "mm",
        "ancestor",
        "x47",
        "divisor",
        "accend_Counter",
        "rightmaxes",
        "pop",
        "my_parse_int",
        "monity",
        "appendleft",
        "ohh",
        "chameleon",
        "ans2",
        "block",
        "splitlines",
        "qu",
        "popleft",
        "posChars",
        "cs_color",
        "plst",
        "percent_loss",
        "new_state",
        "smiles",
        "even",
        "di",
        "coord",
        "no",
        "max1",
        "clr",
        "get_max_prod",
        "instructions",
        "des_arr",
        "volume_threshold",
        "low",
        "dq",
        "top",
        "ele_id",
        "textbooks",
        "loc_max",
        "new_level",
        "fillupper",
        "qs",
        "color_distance",
        "goodtriplets",
        "discard",
        "timeElapsed",
        "penta_fib",
        "initial_last_step_of_k",
        "colored_triangles",
        "__doubling",
        "v_root",
        "req",
        "rail",
        "node",
        "b64encode",
        "clear",
        "down",
        "a_f",
        "ye",
        "numbers_words",
        "bc1",
        "sumtri",
        "url_adfly",
        "binary_strings",
        "qn",
        "nd",
        "most_count",
        "enc",
        "order",
        "GregAndArray",
        "rob_node",
        "currentCount",
        "check",
        "__n",
        "acc_p",
        "X",
        "readIn",
        "circle",
        "divmod",
        "pos_i",
        "euler_tour_dfs",
        "repeat",
        "st1",
        "na",
        "queries",
        "brackets",
        "eyes",
        "sorted_textbooks",
        "find_set",
        "extend",
        "dfs",
        "valid",
        "ts",
        "ind_2",
        "desc",
        "Stack",
        "min_time",
        "bag_content",
        "LCES",
        "opened",
        "arrLen",
        "hot",
        "loop",
        "bLess",
        "lst_books",
        "totallen",
        "sorted_desc",
        "edge",
        "j1",
        "tasks",
        "iter_primes",
        "defaultdict",
        "apnum",
        "mkP",
        "qsize",
        "actual_generator",
        "arange",
        "make_set",
        "suff",
        "Counter",
        "aj",
        "minlen",
        "dc",
        "cut",
        "sb",
        "pledged",
        "dys",
        "subject",
        "c_f",
        "switch",
        "levels",
        "Queue",
        "cB",
        "loc",
        "without_right",
        "sevens",
        "not_rob_node_left",
        "n3",
        "operations",
        "bottom_count",
        "__dfs",
        "kk",
        "greatest",
        "let",
        "dict_a",
        "rise",
        "gen_st",
        "inf",
        "construct",
        "seen2",
        "data_init",
        "dd",
        "lucky10",
        "temp1",
        "stone_bridge_primes",
        "marble",
        "not_useful",
        "lo",
        "property",
        "geta",
        "defect2B",
        "cs",
        "sum_mult",
        "message",
        "all_ages",
        "open",
        "ci",
        "age_sm",
        "square_root",
        "appeard",
        "links",
        "next_position",
        "formatter",
        "magic",
        "num_ops",
        "stdin",
        "randint",
        "bs",
        "cA",
        "min_size",
        "item3",
        "prime",
        "cur_dir",
        "target",
        "roots",
        "percentage",
        "least_common_ancestor",
        "sublist",
        "dfsc",
        "INC",
        "int_s",
        "decend_Counter",
        "big",
        "words",
        "room_number_list",
        "last_even",
        "_fa",
        "get_father",
        "age8",
        "mydic",
        "LA",
        "rev",
        "decrement",
        "sum2",
        "cnt_c",
        "ages",
        "textbooks_low_sorted",
        "next_char_pos",
        "b7",
        "num_str",
        "side_len",
        "top_idx",
        "age6",
        "A",
        "new_sorted_list",
        "err",
        "check_a",
        "hold",
        "ax",
        "abcd",
        "kdx",
        "tr",
        "co",
        "read_int_list",
        "penta_fib_i",
        "desiredColor",
        "exp",
        "flag",
        "mini",
        "charc",
        "switch_it_up",
        "qid",
        "dft",
        "compile",
        "Node",
        "bag",
        "is_ascending",
        "info",
        "cr",
        "sys",
        "dictionary",
        "list2d",
        "topR",
        "soldiers",
        "state",
        "ch2",
        "poss",
        "l",
        "initial_first_step_of_i",
        "threshold_vol",
        "PROBS",
        "fn",
        "month",
        "numbers",
        "restNums2",
        "nlower",
        "thrshld",
        "adjL",
        "__logn",
        "loc_list_last",
        "result_add",
        "predmet",
        "iterator",
        "memo",
        "inc",
        "list3d",
        "format",
        "__parents",
        "ml",
        "color_match_number",
        "iterate",
        "gr",
        "newAge",
        "readlines",
        "base64",
        "to",
        "i2",
        "deleteSet",
        "passup",
        "coeff",
        "letters",
        "replace_left",
        "clean_order",
        "MIT",
        "gp",
        "int1",
        "removeat",
        "code1",
        "PEDPS",
        "is_empty",
        "primes",
        "parity",
        "stored",
        "typ",
        "parent_2k",
        "alphabet",
        "power",
        "queue",
        "j",
        "LIS",
        "bc2",
        "de_start",
        "t_copy",
        "additionals",
        "readline",
        "lca_uv",
        "ob",
        "age1",
        "var2",
        "ascending",
        "inner_list",
        "vector",
        "compute",
        "vb",
        "goodB",
        "dups",
        "strY",
        "bot",
        "max_input",
        "face",
        "yd",
        "grad",
        "tri_print",
        "output",
        "Numx",
        "plain",
        "sorted",
        "CD",
        "calcNext",
        "make_get_pattern",
        "add",
        "arr1",
        "l1d",
        "integerX",
        "l1",
        "count_odd_pentaFib",
        "prv",
        "max",
        "alpdic",
        "min_idx",
        "pointer1",
        "find_missing",
        "wnum",
        "make_triangle",
        "INF",
        "sep",
        "evaporator",
        "fb",
        "total_cost",
        "ind_1",
        "new_len",
        "decompose",
        "lb",
        "sort_arr",
        "ILCI",
        "num",
        "pos",
        "temperature",
        "jk_count",
        "sorter",
        "Q",
        "encoded",
        "answer",
        "lr",
        "ai",
        "__",
        "updated_a",
        "i_max",
        "bLesS",
        "xs",
        "dp2",
        "convert",
        "isGoodTriplet",
        "ILLF",
        "st_rmq",
        "s_age",
        "read_ints",
        "Cil",
        "idEle",
        "n_cases",
        "Qs",
        "found",
        "used_m",
        "triplet",
        "allEven",
        "numGoodTrips",
        "strng",
        "random",
        "specials",
        "mod2",
        "counter_days",
        "num_cmds",
        "test_cases",
        "npres",
        "pts",
        "edx",
        "val_to_add",
        "v_need",
        "name",
        "cday",
        "c1",
        "fmin",
        "bgts",
        "pl",
        "grabit",
        "sorted_asc",
        "m2",
        "dye",
        "condition1",
        "repeats",
        "last_ch",
        "vertex",
        "floor",
        "fliprightmatch",
        "main",
        "swaureroot",
        "kwargs",
        "checked",
        "sides",
        "Figure",
        "dat",
        "v_next",
        "ly",
        "vs",
        "L2",
        "iy",
        "dists",
        "v1",
        "topNum",
        "idx2",
        "quantize",
        "npos",
        "stderr",
        "is_root",
        "input_",
        "new_sorted_list_d",
        "perc_evap",
        "list1",
        "no_terms",
        "rjust",
        "checkmagic",
        "step4",
        "n_k",
        "T",
        "compare",
        "start",
        "encoded_url",
        "without_root",
        "numberOfCases",
        "ks",
        "re",
        "lns",
        "sch",
        "locker_run",
        "this_permut",
        "seen",
        "itr_range",
        "title",
        "LV",
        "register",
        "ncolor",
        "Nxt",
        "cD",
        "zip_longest",
        "barHeights",
        "common",
        "lret",
        "coor_tops",
        "starter",
        "cnt1_max",
        "_stables_min",
        "val3",
        "squares",
        "last_idx",
        "tree",
        "eye",
        "v_idx",
        "s_new",
        "__import__",
        "is_in",
        "modStr",
        "print",
        "options",
        "lower_case_textbook",
        "current_volume",
        "log2",
        "E",
        "delta",
        "from_idx",
        "m_div",
        "squared_list",
        "speed",
        "find_outlier",
        "elements",
        "memmax",
        "start_",
        "perm",
        "iV",
        "parentk",
        "modulus",
        "b64",
        "play_dist",
        "with_root",
        "nweight",
        "conditions",
        "m_d",
        "permut_list",
        "t",
        "ls1",
        "MI",
        "dict_",
        "calc_max_len",
        "Cfl",
        "expression",
        "subword",
        "IndexError",
        "__str__",
        "__bool__",
        "extra",
        "findStr",
        "items",
        "accD",
        "ind",
        "EVEN",
        "dk",
        "new_list",
        "meet_left",
        "a_count",
        "figure",
        "seq",
        "shortest",
        "sort",
        "e_url",
        "seven",
        "capitalize",
        "n",
        "left",
        "nvalue",
        "index",
        "__sub__",
        "et",
        "nelio",
        "grid",
        "luck_check",
        "cdist",
        "content",
        "each",
        "dic",
        "left_yield_f",
        "cur_pos",
        "sum1",
        "current",
        "where",
        "schedule",
        "stackChildren",
        "tx",
        "LIMIT",
        "NameError",
        "isdigit",
        "__depth",
        "lca",
        "new_int",
        "filter",
        "next_ch",
        "_trips",
        "three",
        "decodeStr",
        "sq",
        "oK",
        "round",
        "rret",
        "PRIMES",
        "maps",
        "dict_nums",
        "qpow",
        "a7",
        "Book",
        "minP",
        "ll",
        "bFor",
        "high",
        "enqueue",
        "merge",
        "prob",
        "i3",
        "bisect_left",
        "count_smileys",
        "cnt1",
        "str1",
        "modifiedArray",
        "target_game",
        "max_val",
        "any",
        "resp",
        "unicodedata",
        "rt",
        "int_list",
        "countAtleast",
        "sn",
        "alpha2",
        "d3",
        "dictt",
        "dctTriangles",
        "lst1",
        "exponent",
        "EOFError",
        "S",
        "new_roots",
        "PREFIX",
        "marbles",
        "delete_nodes",
        "lstindx",
        "yards",
        "zz",
        "integers",
        "v3",
        "count_col_triang",
        "needed",
        "sumD",
        "swap",
        "_dfs",
        "BLM",
        "usum",
        "s1",
        "answers",
        "even_digit_squares",
        "we",
        "fa",
        "two",
        "str",
        "binary",
        "cou",
        "triplets",
        "bSev",
        "rows_number",
        "EulerTour",
        "bcount",
        "oldAge",
        "grille",
        "url_encoded",
        "mat",
        "coor_neighbor",
        "og",
        "duplicate_encode",
        "min_key",
        "b_m",
        "list2",
        "plays",
        "fac",
        "ic1",
        "sbp",
        "staticmethod",
        "n_color",
        "sa",
        "LEN",
        "content_pct",
        "alp_to_n",
        "skip",
        "recon",
        "sequence",
        "subjects",
        "REG_CMD",
        "hasAllCodes",
        "dxa",
        "citation",
        "string",
        "m",
        "testbooks_sorted_indexes",
        "powOf5",
        "vals",
        "ind_3",
        "_",
        "sc2",
        "all",
        "lastindex",
        "is_subsequence",
        "t1",
        "count_1",
        "type_arr",
        "n_max",
        "valMap",
        "Best",
        "maxUse",
        "__E",
        "res",
        "can",
        "alp",
        "AssertionError",
        "leftmatch",
        "lx",
        "zeros",
        "list_to_str",
        "sum_ages",
        "run",
        "sort_desc",
        "MOD",
        "_coors",
        "te",
        "read",
        "age_5",
        "tc_",
        "lmp",
        "exist",
        "kooks",
        "temp_s",
        "vertices",
        "dif",
        "NE",
        "ij",
        "max_cost",
        "decode",
        "ctr",
        "dfs2",
        "rindex",
        "layer",
        "triples",
        "stri",
        "has_sub",
        "bin_value",
        "js",
        "count",
        "daily_content",
        "xrange",
        "isAllNeg",
        "__ge__",
        "idx1",
        "soint",
        "yindex",
        "copy",
        "MaxM",
        "predict_age",
        "lockers",
        "ti",
        "DIRS",
        "lis",
        "comb",
        "parent1",
        "numSquares",
        "pc",
        "QS",
        "max_p",
        "countGoodTripletsCase1",
        "b_h",
        "half2",
        "v",
        "numEle",
        "norm",
        "__le__",
        "ENGLISH_NUMBE_NAMES",
        "subj",
        "deleting",
        "encode",
        "npnt",
        "va",
        "attempt2",
        "Decimal",
        "sign",
        "subAnsSet",
        "print_s",
        "n2",
        "MGN",
        "full",
        "duplicates",
        "check_challenge",
        "__dist",
        "coors",
        "counts",
        "input",
        "rd",
        "initial_first_step_of_k",
        "Main",
        "nfour",
        "b4",
        "C",
        "maxCita",
        "action",
        "t2",
        "threePts",
        "d",
        "pt2",
        "num2words1",
        "ILLI",
        "amountevaporated",
        "lengthOfSet",
        "mPow2",
        "d_next",
        "evens",
        "bfour",
        "beauty",
        "perct_evp",
        "sum",
        "room_number_set_sum",
        "wordList",
        "pu",
        "_query",
        "isPossible",
        "numQueries",
        "glo_max",
        "newA",
        "locals",
        "aLesS",
        "sorted_arr",
        "good_triplets",
        "list",
        "ok_a",
        "accum",
        "IDX",
        "_stables_max",
        "pattern",
        "toadd",
        "siz",
        "countGreater",
        "alphanum",
        "totalsteps",
        "data_dict",
        "d_color",
        "dy",
        "height_differences",
        "sochef",
        "initials",
        "currentpow",
        "near",
        "solve",
        "minimum",
        "first_step_of_k",
        "result_t",
        "join",
        "bytes",
        "nine",
        "union",
        "isAllPos",
        "des",
        "logical_and",
        "alpha2num",
        "day",
        "times_query",
        "o",
        "day_counter",
        "triangle_count",
        "noses",
        "val2",
        "narcissistic",
        "bb",
        "make",
        "n_col",
        "my_dict",
        "room_number_set",
        "treshold",
        "_prod_cache",
        "multi_level_count",
        "initialize",
        "per_",
        "pa",
        "q_t",
        "initial_last_step_of_j",
        "tuple",
        "make_nCr_mod",
        "p",
        "_tops",
        "f_colorful_tree",
        "prime_set",
        "bool",
        "pow",
        "adfly_url",
        "nums",
        "makeSegTree",
        "line2",
        "depth_lca",
        "amount_remaining",
        "best_max",
        "applied",
        "arr_j",
        "rem",
        "arr_asc",
        "euler_depth_real",
        "sum_so_far",
        "smallestproduct",
        "maketrans",
        "max_no",
        "ary",
        "append",
        "tmp2",
        "cache",
        "textbooks_low",
        "goodTriplets",
        "deque",
        "altf",
        "iorig",
        "colored",
        "to_delete",
        "a_bool",
        "set_ancestor",
        "combos",
        "r_arr",
        "l_bounds",
        "tmp",
        "get_first",
        "right_yield_t",
        "s_stored",
        "vectorize",
        "primes_set",
        "lower_case",
        "leg",
        "flags",
        "get_temp",
        "get_lca",
        "grand_secret",
        "stone",
        "candidates",
        "flip",
        "drop",
        "n_",
        "sqw",
        "mi",
        "what",
        "step3",
        "cl",
        "list_sum2",
        "iMinV",
        "total_days",
        "colors",
        "ntoa",
        "b1",
        "age2",
        "trees",
        "m_value",
        "depth_v",
        "iVColorss",
        "vNow",
        "ILF",
        "topC",
        "k2",
        "SEG",
        "num2",
        "sumDs",
        "number_map",
        "insert",
        "N_q",
        "pn",
        "isinstance",
        "enumerate",
        "valleys",
        "evap_per_day",
        "epd",
        "odd_penta_fib",
        "dp_max",
        "nose",
        "a",
        "i0",
        "adFly_encoder",
        "max_streak",
        "r",
        "II",
        "U",
        "converter",
        "newstr",
        "fib",
        "now",
        "contentRemaining",
        "i_min",
        "bins",
        "ge",
        "cumadd",
        "max_len",
        "actual",
        "deleted",
        "d_color_memo",
        "center",
        "isspace",
        "self",
        "index_of_move",
        "evap",
        "sortbooks",
        "search",
        "perm_count",
        "operator",
        "printl",
        "var",
        "indexes",
        "type_play",
        "ac",
        "xindex",
        "lim",
        "A1",
        "trap",
        "p2",
        "bl",
        "build",
        "presum",
        "isdroppable",
        "fu",
        "__to",
        "memmin",
        "lost",
        "perc_content",
        "sorted_list",
        "left_p",
        "diff",
        "crr",
        "maxVal",
        "fin4",
        "maxP",
        "RMQ",
        "beats",
        "hi",
        "parent_exist",
        "CC",
        "all_indx",
        "coor_set",
        "bookList",
        "up",
        "final",
        "sibs",
        "den1",
        "max_pre",
        "res1",
        "gap",
        "Hash_Function",
        "point",
        "totalAmountVisible",
        "sbs",
        "depth_real",
        "alpha",
        "maxTriangles",
        "lengths",
        "ad_fly_code",
        "elem",
        "is_prime",
        "x2",
        "tmp1",
        "books_dict",
        "take",
        "rank",
        "third",
        "depth_topo",
        "minimo",
        "cases",
        "unique",
        "distance",
        "clrmax",
        "item2",
        "gcd",
        "G",
        "removeRoot",
        "yi",
        "lst",
        "loc_list",
        "multi_itself",
        "dw",
        "make_submission",
        "freq",
        "lv",
        "replace_right",
        "z",
        "cur",
        "new_A",
        "mlimit",
        "M",
        "to_string",
        "parent",
        "MINP",
        "ij_count",
        "little",
        "isalpha",
        "div",
        "replace",
        "distinct",
        "dctPts",
        "y",
        "max_can_shoot",
        "laugh",
        "sum_of_i",
        "oper",
        "max_pwr",
        "sentence",
        "line1",
        "open_brackets",
        "missing_water_per_level",
        "solveFierceBattles",
        "init_array",
        "ik",
        "arrasc",
        "L1",
        "orda",
        "tot1",
        "sub",
        "restNums",
        "good",
        "m_max",
        "g2",
        "s0",
        "As",
        "age_1",
        "EDGELIST",
        "bruteforce",
        "dbl_x",
        "jk_ids",
        "binary_code_of_length_k",
        "pedps",
        "r4",
        "arr2",
        "is_sorted_with",
        "pnt",
        "first_step_of_j",
        "obj",
        "pat",
        "actual2",
        "r7",
        "zapr",
        "alf",
        "pyramid",
        "next_i",
        "islice",
        "arri",
        "numdict",
        "line",
        "NIL",
        "ic_max",
        "read_list",
        "odds",
        "val1",
        "ValueError",
        "visited",
        "getLCA",
        "recursive_climbStairs",
        "last",
        "collections",
        "dfq",
        "final_code",
        "in_j",
        "next_",
        "max_prod_right",
        "other_coler",
        "v_to_d",
        "total_multiplied_ages",
        "half",
        "maxnum",
        "warriors",
        "read_input",
        "deg",
        "__getitem__",
        "y47",
        "n_color_memo",
        "vPar",
        "room_number_list_sum",
        "tc",
        "arr_size",
        "toReturn",
        "ord",
        "less_than",
        "getSlices",
        "ew",
        "maxcl",
        "an",
        "MODULUS",
        "bin2dec",
        "ptr",
        "tw",
        "str_2n",
        "premax",
        "edy",
        "tour_v",
        "c2",
        "get_primes",
        "float",
        "dir",
        "thres",
        "nextSubAnsSet",
        "roop",
        "mystack",
        "height",
        "N",
        "qd",
        "word_pos",
        "curr_min",
        "highBuffer",
        "out",
        "josephus_survivor",
        "numOfSides",
        "element",
        "maxRight",
        "mask",
        "goodC",
        "a2",
        "F",
        "i",
        "ord_ar",
        "possible",
        "li",
        "sqrtofage",
        "txt",
        "uidx"
    ],
    "integer": [
        "123",
        "100001",
        "31",
        "10",
        "577",
        "70",
        "1000000",
        "109",
        "120",
        "14",
        "75",
        "45",
        "39367",
        "11",
        "1492993",
        "1800",
        "64",
        "97",
        "1297",
        "8",
        "40",
        "96",
        "18433",
        "629857",
        "1179649",
        "147457",
        "1337",
        "472393",
        "3889",
        "1500000",
        "998244353",
        "10000",
        "48",
        "50",
        "20",
        "10000000",
        "2593",
        "786433",
        "877",
        "32",
        "2917",
        "0",
        "906609",
        "3",
        "4",
        "63",
        "19",
        "1338",
        "9",
        "10369",
        "139969",
        "99",
        "475",
        "114514",
        "987",
        "100000000000000",
        "257",
        "37",
        "29",
        "1001",
        "73",
        "2147483647",
        "13",
        "839809",
        "1",
        "100000",
        "209953",
        "317",
        "16",
        "1153",
        "999000000999",
        "7",
        "1000000000",
        "1140",
        "110",
        "55",
        "50000",
        "5050",
        "17497",
        "163",
        "12",
        "65537",
        "487",
        "101",
        "80",
        "15",
        "12289",
        "17",
        "331777",
        "23",
        "300000",
        "316",
        "433",
        "3457",
        "9009",
        "52489",
        "26",
        "1_500_000",
        "99000099",
        "18",
        "200000000000000000",
        "300",
        "100",
        "9999000000009999",
        "1459",
        "5",
        "193",
        "99999999",
        "43996",
        "1000000001",
        "746497",
        "6",
        "769",
        "33",
        "90",
        "1218",
        "22",
        "597",
        "2",
        "25",
        "677",
        "762939453125",
        "570",
        "122",
        "99956644665999",
        "60",
        "995329",
        "9966006699",
        "1000000007",
        "1000",
        "65",
        "315",
        "10000000000000000000000000000000",
        "30"
    ],
    "module_identifier": [
        "compress",
        "log",
        "decimal",
        "sin",
        "calendar",
        "month_name",
        "starmap",
        "binascii",
        "merge",
        "OrderedDict",
        "base64",
        "defaultdict",
        "chain",
        "ascii_letters",
        "heappop",
        "bisect_left",
        "accumulate",
        "Counter",
        "stdout",
        "le",
        "fmod",
        "unicodedata",
        "b64decode",
        "ChainMap",
        "heapq",
        "re",
        "queue",
        "findall",
        "Queue",
        "product",
        "zip_longest",
        "factorial",
        "inf",
        "pi",
        "heappushpop",
        "List",
        "fabs",
        "cos",
        "log2",
        "ge",
        "bisect",
        "os",
        "islice",
        "add",
        "stdin",
        "randint",
        "nsmallest",
        "groupby",
        "time",
        "cycle",
        "fractions",
        "collections",
        "heappush",
        "operator",
        "takewhile",
        "string",
        "linalg",
        "namedtuple",
        "reduce",
        "sqrt",
        "array",
        "typing",
        "permutations",
        "partial",
        "pow",
        "combinations_with_replacement",
        "b64encode",
        "combinations",
        "lru_cache",
        "random",
        "count",
        "mul",
        "deque",
        "locale",
        "heapify",
        "sys",
        "numpy",
        "ascii_lowercase",
        "repeat",
        "functools",
        "copy",
        "dropwhile",
        "xor",
        "bisect_right",
        "floor",
        "itertools",
        "gcd",
        "math",
        "ceil"
    ],
    "string": [
        "\"aeiouAEIOU\"",
        "\";-D\"",
        "\"\"\"\n         :type citations: List[int]\n         :rtype: int\n         \"\"\"",
        "f'{a}{b}'",
        "\"\"\"\n@author: anishukla\n\"\"\"",
        "':~D'",
        "\":\"",
        "'Error'",
        "\":;\"",
        "'''Function that sort a list full of textbooks by subject'''",
        "'n'",
        "'m'",
        "'G'",
        "\"You are %s schedule\"",
        "\"Invalid value\"",
        "\"\"\"\n    Sort list of textbooks\n    \"\"\"",
        "\"\"\"\narrange string in a form that no two 'B' or two 'G' come together, if can't \u00a0\u00a0\u00a0\u00a0return -1\ncost = |i-j|**t\nminimize cost\n\"\"\"",
        "\"May\"",
        "'intersection_update'",
        "\"\"\"\n    makeTriangle produces a \u2206 in a special sequence of numbers.\n    m is the starting point and n is the finishibg one.\n    The final digit of each number is taken as a character in making the \u2206.\n    This functions returns a \u2206 as a string if possible with the given input else, returns an empty string.\n    \"\"\"",
        "' trillion, '",
        "\"y\"",
        "\"\"\"\nx = [chr(ord(\"z\")-i) for i in range(26)]\nx = \"\".join(x)\nprint(x)\n\"\"\"",
        "'0 '",
        "\"abcdefghijklmnopqrstuvwxyz \"",
        "'''\n        \u8fd9\u9053\u9898\u76ee\u7684\u5173\u952e\u662f\u7b2c\u4e00\u6b65\u770b\u523010**9+7\u77e5\u9053\u7528dp\u65b9\u6cd5\u6765\u505a\n        dp[i]\u8868\u793a\u8303\u56f4[0\uff0ci]\u7684\u5e8f\u5217\u4e2a\u6570\uff0c\u7136\u540e\u53d1\u73b0\u4e0d\u597d\u627e\u9012\u63a8\u5173\u7cfb\n        \u8fd9\u4e2a\u65f6\u5019\u80af\u5b9a\u662f\u9690\u85cf\u7684\u4fe1\u606f\u6ca1\u7528\uff0c\u5916\u9762\u9700\u8981\u901a\u8fc7\u5b9e\u9645\u7684\u4f8b\u5b50\u6765\u603b\u7ed3\u5f71\u54cd\u4e2a\u6570\u7684\u53e6\u5916\u4e00\u4e2a\u53c2\u6570\n        \u5e8f\u5217\u662f\u5347\u8fd8\u662f\u964d\u8ddf\u4ec0\u4e48\u5173\u7cfb\u6700\u5927\uff0c\u90a3\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u3002DID\u6a21\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u662f1032\uff0c\u90a3\u4e48\u6211\u4eec\u518d\u52a0\u4e2aD\uff0c\u8981\u6c42\u9012\u51cf\n        \u8fd9\u4e2a\u65f6\u5019\u591a\u51fa\u4e86\u4e00\u4e2a4\u6765\uff0c\u6211\u4eec\u5982\u4f55\u6539\u90201032\u5462\uff0c\u76f4\u63a5\u52a04\u662f\u4e0d\u884c\u7684\uff0c\u90a3\u4e48\u52a0\u4e00\u6837\u76842\uff1f\u6539\u621010432\uff0c\u76f8\u5f53\u4e8e3\uff0c2\u90fd+1\n        \u52a01\u5462\uff1f\u6539\u621020431\uff0c\u76f8\u5f53\u4e8e1\uff0c3\uff0c2\u90fd+1\uff0c\u90a3\u4e48\u89c4\u5f8b\u662f\u4ec0\u4e48\u3002\n        \u5982\u679c\u662fD\uff0c\u90a3\u4e48\u53ea\u80fd\u653e<=\u6700\u540e\u4e00\u4e2a\u6570\u7684\u6570\uff0c\u7136\u540e\u628a\u539f\u6765\u6240\u6709>=\u5c3e\u5df4\u7684\u6570\u90fd+1,\u6700\u540e\u4e00\u4e2a\u6570\u5f88\u91cd\u8981\n        \u53cd\u8fc7\u6765\u60f3\uff0c\u5982\u679c\u662fI,\u90a3\u4e48\u53ea\u80fd\u653e>\u6700\u540e\u4e00\u4e2a\u6570\u7684\u6570\uff0c\u7136\u540e\u539f\u6765\u6240\u6709\u7684>=\u65b0\u52a0\u7684\u6570\u90fd+1\n        '''",
        "\"{}\\n\"",
        "'as'",
        "\"haHa\"",
        "\"You are \"",
        "'Invalid ticket number'",
        "\"bumpy\"",
        "\"five\"",
        "\"d\"",
        "'W'",
        "\"Coke\"",
        "'zero'",
        "\"t\"",
        "\"\"\"Returns the textbooks non-case-sensitive sorted.\"\"\"",
        "\"\"\"\n         :type root: TreeNode\n         :rtype: int\n         \"\"\"",
        "\"z\"",
        "\"7189178156\"",
        "'Forty'",
        "\")D\"",
        "\"green\"",
        "'eighteen'",
        "'d'",
        "'Yes'",
        "\"099189178156\"",
        "\"81910\"",
        "\"Chicken\"",
        "\"enter any number from 0 through 9\"",
        "\"87156\"",
        "\"on track.\"",
        "'0.33'",
        "\"p\"",
        "\"\"\"a new string where each character in the new string is '(' \n    if that character appears only once in the original word, or ')' \n    if that character appears more than once in the original word. \n    Ignores capitalization when determining if a character is a duplicate. \"\"\"",
        "'w'",
        "'h'",
        "\"0\\n1 1\"",
        "\"7\"",
        "\"1235813471\"",
        "'May'",
        "\"077\"",
        "\"n\"",
        "','",
        "'pizza'",
        "'Milkshake'",
        "'de'",
        "\"Help yourself to a honeycomb Yorkie for the glovebox.\"",
        "'b'",
        "\"Seven\"",
        "':D'",
        "r'(ha)+|(Ha)+'",
        "\"No end\"",
        "'Haha'",
        "'YES'",
        "\"69156\"",
        "'(?i)[^a-z ]'",
        "\"Zero One Two Three Four Five Six Seven Eight Nine Ten\"",
        "' billion'",
        "\"\"\"Returns the textbooks list non-case-sensitive sorted.\"\"\"",
        "\" 0123456789\"",
        "\"Onionrings\"",
        "'p'",
        "\"YES\\n\"",
        "'total'",
        "'6'",
        "f'00https://adf.ly/go.php?u={base64.b64encode(url.encode()).decode()}'",
        "\"00\"",
        "\"seven\"",
        "\"\"\" Sort textbooks by subjects. \"\"\"",
        "'chicken'",
        "\"\"\"\n        :type root: TreeNode\n        :type to_delete: List[int]\n        :rtype: List[TreeNode]\n        \"\"\"",
        "'''\n\nprint(\"nlower = %d\"%nlower)\n\nprint(\"nupper = %d\"%nupper)\n\nprint(\"lower = %d\"%lower)\n\nprint(\"upper = %d\"%upper)\n\nprint(\"lowerfill = %d\"%lowerfill)\n\nprint(\"upperfill = %d\"%upperfill)\n\nprint(\"totalsteps = %f\"%totalsteps)\n\n'''",
        "\":~)\"",
        "f'#{\"_\" * (2*i-1)}#'",
        "'Fifteen'",
        "\"\"\" Main controller \"\"\"",
        "'Invalid'",
        "'Six'",
        "f\"{([[2,1][p(c)],4][c[0]=='r']if p(t)else 1)/(7if p(t)else 3):.3f}\"",
        "'''Author- Akshit Monga'''",
        "\"two\"",
        "\"10\"",
        "f\"You are {delta} ahead of schedule!\"",
        "'eq'",
        "\"538\"",
        "\"40448\"",
        "\"February\"",
        "\"268\"",
        "'''\n    def _dfs(self, v: int, d: int = 0, c = 0, p: int = -1) -> None:\n        if p != -1:\n            self.par[v][0] = p\n        self.dep[v] = d\n        self.costs[v] = c\n        for i in range(len(self.to[v])):\n            u = self.to[v][i]\n            if u == p:\n                continue\n            else:\n                self._dfs(u, d+1, c+self.co[v][i], v)\n    '''",
        "'March'",
        "'red'",
        "\"83\"",
        "\"\"\"\u5148\u8aad\u307f\u3057\u305f(\u30aa\u30d5\u30e9\u30a4\u30f3)\u30af\u30a8\u30ea\u306b\u5bfe\u3057\u3066\u89e3\u3092\u6c42\u3081\u308b\"\"\"",
        "'g'",
        "'turnover'",
        "'December'",
        "\"11\"",
        "\"o\"",
        "';-D'",
        "\"\"\"\n         \u56db\u5e73\u65b9\u548c\u5b9a\u7406\n         :type n: int\n         :rtype: int\n         \"\"\"",
        "'-1'",
        "\"b\"",
        "\"?u=\"",
        "'lr'",
        "' trillion'",
        "'a='",
        "\"\"",
        "'Seven'",
        "\"97167\"",
        "'haH'",
        "'Fifty'",
        "'run'",
        "'Nineteen'",
        "\"error\"",
        "'no'",
        "'You are {} ahead of schedule!'",
        "f\"You are {-val} behind schedule.\"",
        "'-'",
        "\"Challenge is completed.\"",
        "\"January\"",
        "'z'",
        "'Burger'",
        "\"49\"",
        "\" Coke\"",
        "\"79167\"",
        "\"j\"",
        "\"68\"",
        "'a'",
        "\"h\"",
        "\"\"\"\n         :type height: List[int]\n         :rtype: int\n         \"\"\"",
        "\"LT\"",
        "\"onionrings\"",
        "';~D'",
        "'November'",
        "\"Ten\"",
        "\"4268\"",
        "\"38\"",
        "\"85\"",
        "\"1 1\"",
        "\"3369156\"",
        "\"yellow\"",
        "'February'",
        "\"w\"",
        "\"93\"",
        "'e'",
        "\"1\"",
        "\"2358134711\"",
        "\"1347112358\"",
        "f'It\\'s hotter than the sun!!'",
        "'k'",
        "'sample.in'",
        "'nine'",
        "\"0.57\"",
        "\"One\"",
        "\"000\"",
        "'five'",
        "\"0448\"",
        "'1'",
        "'descending'",
        "\"Three\"",
        "\"l\"",
        "f\"{l:_^{w}}\"",
        "\"zero one two three four five six seven eight nine\"",
        "\"\"\"\n         :type a: int\n         :type b: List[int]\n         :rtype: int\n         \"\"\"",
        "\":) :D :-) :-D :~) :~D ;) ;D ;-) ;-D ;~) ;~D\"",
        "\"coke\"",
        "r\"h+\"",
        "\"^[:;][-~]*[)D]\"",
        "\"Burger Fries Chicken Pizza Sandwich Onionrings Milkshake Coke\"",
        "'utf-8'",
        "'X'",
        "r'(?i)[^a-z ]'",
        "\"67\"",
        "\"NaN\"",
        "\"for fuck's sake\"",
        "'NO'",
        "\"utf-8\"",
        "\"14\"",
        "'You are {} behind schedule.'",
        "':)'",
        "'Zero'",
        "'0.57'",
        "'.'",
        "'A'",
        "'Two'",
        "\"i\"",
        "\"4156\"",
        "\"pass\"",
        "'02468'",
        "'Ninety'",
        "\"Level: \"",
        "\"You are on track.\"",
        "\"75\"",
        "\"505510\"",
        "\"0.28\"",
        "\"9110\"",
        "f\"{'#'*(n*2-1)}\"",
        "\"20224610\"",
        "'NSEW'",
        "\":~D\"",
        "'yellow'",
        "'.01'",
        "\" Pizza\"",
        "\"5167\"",
        "\"98178156\"",
        "\"December\"",
        "\"48\"",
        "\"milkshake\"",
        "\"nine\"",
        "'[aeiou]'",
        "\"April\"",
        "'s'",
        "'abcdefghijklmbopqrstuvwxyz'",
        "'?'",
        "\"224610\"",
        "r'(Ha)+|(ha)+'",
        "\"29\"",
        "'0'",
        "f'0{k}b'",
        "\":-)\"",
        "'https://adf.ly/go.php?u='",
        "\"run\"",
        "\"\"\"\nfor i in nxt:\n    print(i[:4])\n\"\"\"",
        "'7'",
        "\"f\"",
        "'NS'",
        "\"\\r\\n\"",
        "\"96https://adf.ly/go.php?u=\"",
        "\"3\"",
        "'August'",
        "\"65\"",
        "\"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"",
        "r'\\A[:;][-~]?[)D]\\Z'",
        "'[^a-zA-Z\\ ]'",
        "'2'",
        "'num is too large: %s'",
        "'Zero-One-Two-Three-Four-Five-Six-Seven-Eight-Nine'",
        "\"6178156\"",
        "'yes, {}'",
        "\"red\"",
        "\"Five\"",
        "'Ten'",
        "\"NO\\n\"",
        "\"H\"",
        "'{{:_^{}}}'",
        "\"g\"",
        "\"\"\"\n    :param r:\n    :param w:\n    :return:\n    \"\"\"",
        "'fourteen'",
        "'''\n    tb\n    1\u3064\u76ee\uff1a\n    2\u3064\u76ee\uff1a\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\n    3\u3064\u76ee\uff1a\n    '''",
        "\"\"\"\n         :type s1: str\n         :type s2: str\n         :rtype: bool\n         \"\"\"",
        "'4'",
        "\"5\"",
        "\"You are {} behind schedule.\"",
        "\"96156\"",
        "\"CAPTAIN AMERICA EVADES\"",
        "r\"[^a-zA-Z\\ ]\"",
        "\"1123581347\"",
        "'%d ahead of'",
        "'Five'",
        "')'",
        "\"https://adf.ly/go.php?u=\"",
        "'bcdefghijklmnopqrstuvwxyza'",
        "\"LOCAL\"",
        "' thousand, '",
        "'eight'",
        "\"5279167\"",
        "' billion, '",
        "\"76\"",
        "':~)'",
        "\"yes, {}\"",
        "'''\nCreated on Oct 9, 2012\n\n@author: Nitish\n'''",
        "'Sandwich'",
        "\"September\"",
        "\"167\"",
        "\"279167\"",
        "\"Eight\"",
        "\"\"\" switch statement \"\"\"",
        "\"-1\"",
        "'<'",
        "'''print \"Debug value:\", (x47[7]-(y[7]+y[4]+y47[4]))\n\t\tprint y[7], \" \", y[4], \" \", y47[4]\n\t\tprint y47[7]'''",
        "\"6066\"",
        "\"86\"",
        "\"\"\"\n    if(len(stack)>0):\n     idx,char = stack[len(stack)-1]\n     if(char=='G'):\n      geven+=1\n     else:\n      beven+=1\n    print(\"geven =\",geven,\"beven =\",beven,end=' ')\n    \"\"\"",
        "\"e\"",
        "'0.14'",
        "\"inf\"",
        "\"1234567890\"",
        "f\"ind {ind} sumo {sumo} reloaded {reloaded}\"",
        "'#{}#'",
        "\"2\"",
        "'EW'",
        "'Help yourself to a honeycomb Yorkie for the glovebox.'",
        "'Sixteen'",
        "f\"The {n}th day the evaporator is useless\"",
        "'Zero One Two Three Four Five Six Seven Eight Nine'",
        "r'(Ha|ha)\\1*'",
        "\"Time Elapsed: %f seconds\\n\"",
        "'yes, {}cending'",
        "'Invalid number'",
        "\"05510\"",
        "'bg'",
        "f\"{ans>>1}\\n\"",
        "'Twelve'",
        "' '",
        "')D'",
        "'3'",
        "\"yes, %s\"",
        "'S'",
        "\"178156\"",
        "'-~'",
        "f\"{a}{b}\"",
        "'BG'",
        "\"chicken\"",
        "'update'",
        "\"R\"",
        "\"78156\"",
        "'='",
        "\"GT\"",
        "\"\"\" A time elapsed decorator \"\"\"",
        "'GB'",
        "'asc'",
        "'an eb ar pr ay un ul ug ep ct ov ec'",
        "\"Zero\"",
        "'''\n#check k = 1\n'''",
        "\"729\"",
        "\"bcdEfghIjklmnOpqrstUvwxyzA\"",
        "'burger'",
        "\":D\"",
        "'H\u00e6?'",
        "\"YES\"",
        "'milkshake'",
        "\"257\"",
        "\"Fries\"",
        "\"43710\"",
        "'Seventy'",
        "'seven'",
        "\"-\"",
        "\"5914\"",
        "\" \"",
        "r'[^a-zA-Z ]'",
        "'c'",
        "\"r\"",
        "\"ascending\"",
        "f\"{arr[i]}, {arr[i+1]}, {new_state}, {state}\"",
        "\"156\"",
        "'onionrings'",
        "\"Haha\"",
        "\"m\"",
        "'fries'",
        "\"ERROR\"",
        "'j'",
        "'t'",
        "\" Sandwich\"",
        "\"## \"",
        "\"549\"",
        "\"TAssertionError:\"",
        "\"W\"",
        "'v'",
        "'%s%s'",
        "'Thirteen'",
        "\";D\"",
        "\"#\"",
        "\"WE\"",
        "'bcdEffghIjklmnOpqrstUvwxyzA'",
        "';)'",
        "'Challenge is completed.'",
        "':-)'",
        "'u'",
        "\">\"",
        "\"i:,res:,\"",
        "\"total\"",
        "'E'",
        "\"1910\"",
        "'yes, %sscending'",
        "\"99189178156\"",
        "'six'",
        "'Fries'",
        "\"{}\"",
        "'''Pattern is anything BUT a-zA-Z and whitespace '''",
        "'July'",
        "\"8088167\"",
        "'1 '",
        "'Twenty'",
        "'''Complexity O(n)'''",
        "'D'",
        "\"7077\"",
        "f'{i}{j}'",
        "\"smooth\"",
        "\"4711235813\"",
        "r\"H+\"",
        "\"You are {} ahead of schedule!\"",
        "\"62810\"",
        "\"3471123581\"",
        "'*'",
        "';D'",
        "r'\\s*\\d+\\s*$'",
        "\"ascii\"",
        "''' Time Limited when n = 8 , maybe caused by the lowly run time of python\n         if n == 1:\n             return 9\n         maxNum = int(pow(10, n)) - 1\n         for i in reversed(range(maxNum // 10, maxNum)):\n             palindrome = self.createPalindrome(i)\n             j = maxNum\n             while j * j >= palindrome:\n                 if palindrome % j == 0:\n                     return palindrome % 1337\n                 j -= 1\n         return 0\n     \n     def createPalindrome(self, n):\n         palindrome = str(n)\n         reverse = str(n)[::-1]\n         palindrome += reverse\n         return int(palindrome)\n         '''",
        "\"sandwich\"",
        "\"SN\"",
        "\"\"\"\n    \u9589\u533a\u9593 (i,N-1] \u306e\u4e2d\u306e\u6700\u3082\u5de6\u7aef\u306b\u3042\u308b\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8s\u306eindex\n    \"\"\"",
        "\"0.14\"",
        "\"\"\"\n         :type nums: List[int]\n         :rtype: int\n         \"\"\"",
        "';~)'",
        "\"\"\"Least Common Ancestor\u3092\u6c42\u3081\u308b\u305f\u3081\u306e\u524d\u51e6\u7406\"\"\"",
        "' hundred'",
        "\"October\"",
        "\"088167\"",
        "'01'",
        "\"Invalid\"",
        "\"66\"",
        "\"July\"",
        "'o'",
        "\";-)\"",
        "\"60\"",
        "\"369156\"",
        "\" Burger, Fries, Chicken, Pizza, Sandwich, Onionrings, Milkshake, Coke\"",
        "\"\"\"Return english names of number 0-9.\"\"\"",
        "\"pizza\"",
        "\"Four\"",
        "'#'",
        "'aeiou'",
        "\"Two\"",
        "\"six\"",
        "'5'",
        "\"24610\"",
        "\"sack\"",
        "\"\"\"Parses an str for an int value. If the str does not convert to a valid int, return the \"NaN\" string.\"\"\"",
        "\"burger\"",
        "\"x\"",
        "\"yes, descending\"",
        "\"9099189178156\"",
        "'CAPTAIN AMERICA EVADES'",
        "'January'",
        "'B'",
        "'ew'",
        "\";)\"",
        "'desc'",
        "\"c\"",
        "\".\"",
        "\"\"\"Determines if three points are colinear\"\"\"",
        "\"5510\"",
        "'haHa'",
        "\"November\"",
        "'October'",
        "'SSSSSSSSSS'",
        "'[^a-z A-Z]'",
        "'April'",
        "f'You are {p - current} behind schedule.'",
        "' million, '",
        "\" Chicken\"",
        "\"three\"",
        "'abcdeffghijklmnopqrstuvwxyz'",
        "'Three'",
        "\";~)\"",
        "\"yes, ascending\"",
        "''",
        "\"k\"",
        "\" Milkshake\"",
        "'''\n                    if abs(arr[i]-arr[j])<=a and abs(arr[j]-arr[k])<=b and abs(arr[i]-arr[k])<=c: count+=1\n                    '''",
        "'[^A-Za-z]+'",
        "\"%.1f\"",
        "'one'",
        "\":)\"",
        "\"6410\"",
        "\"303369156\"",
        "\"39\"",
        "\"2810\"",
        "'Onionrings'",
        "r'[^a-zA-Z\\s]'",
        "\"\"\" \n         :type citations: List[int] \n         :rtype: int \n         \"\"\"",
        "'Nine'",
        "\"D\"",
        "'%d behind'",
        "f'You are {current - p} ahead of schedule!'",
        "\"m not < n\"",
        "\"Number must be >= 0 and < 10\"",
        "'|'",
        "\"066\"",
        "\" Onionrings\"",
        "\"\\n\"",
        "f\"{code:{l}b}\"",
        "'N'",
        "\"5813471123\"",
        "'\\W+'",
        "'No'",
        "\"Some value\"",
        "'smooth'",
        "\"\"\"Sieve of Eratosthenes to calculate all primes less than or equal to n.\n\n    Return set of primes.\n    \"\"\"",
        "'ZOTTFFSSENenwhoiieiireoruvxvgno  ere ehe   e   nt '",
        "\"\"\"\nbcdefghijklmnopqrstuvwxyza\n\naabbccaabca\naab / bccaa / bca\n\n\"\"\"",
        "'>'",
        "\"turnover\"",
        "\"84\"",
        "'[^a-zA-Z\\s]'",
        "'9'",
        "\"3710\"",
        "'January February March April May June July August September October November December'",
        "'unicodedata'",
        "\"189178156\"",
        "r\"[:;][-~]?[)D]\"",
        "'\\n'",
        "\"+inf\"",
        "'('",
        "\"56\"",
        "' hundred and '",
        "\"Nine\"",
        "\"{:.03}\"",
        "\"3581347112\"",
        "':;'",
        "'0123456789'",
        "'Chicken'",
        "'''make a case insensitive sorted list'''",
        "\"95\"",
        "\"\u0422\u0435\u043c\u043f\u0435\u0440\u0430\u0442\u0443\u0440\u0430 \u0441\u043e\u043b\u043d\u0446\u0430\"",
        "f\"Help yourself to a honeycomb Yorkie for the glovebox.\"",
        "\"zdhnt\"",
        "'{:0{}b}'",
        "\":-D\"",
        "\"448\"",
        "':-D'",
        "'Four'",
        "\"\"\"Main program.\"\"\"",
        "\"four\"",
        "'.!'",
        "'f'",
        "'Not Found'",
        "'NaN'",
        "\"E\"",
        "f'Help yourself to a honeycomb Yorkie for the glovebox.'",
        "'GCJ_LOCAL'",
        "\"\"\"\n         :type a: int\n         :type b: List[int]\n         :rtype: int\n         a %= 1337\n         if len(b) == 1:\n             return self.powMod(a, b[0])\n         return self.powMod(self.superPow(a, b[:-1]), 10) * self.powMod(a, b[-1]) % 1337\n         \"\"\"",
        "r\"[^a-zA-Z\\s]\"",
        "'~'",
        "\"zero\"",
        "\"abcdefghijklmnopqrstuvwxyz\"",
        "\"8210\"",
        "\"This is dumb...\"",
        "'Eight'",
        "f'You are {x-c} behind schedule.'",
        "'yes, ascending'",
        "'1234567890'",
        "\"eight\"",
        "'rl'",
        "'inf'",
        "\"Burger\"",
        "\"No start\"",
        "\"_in.txt\"",
        "\";~D\"",
        "\"7310\"",
        "\"SAFE\"",
        "\"03369156\"",
        "'difference_update'",
        "\"0224610\"",
        "f'{randint(0, 99):02d}https://adf.ly/go.php?u={url}'",
        "'One'",
        "\"\"\"\n         CHECKING TWO STRINGS ARE ANAGRAMS IS FASTER BY SORTING THAN BY COUNTE (AT WHAT LEN DOES THIS FLIP)\n         RETURNING WHEN SORTED(S1) != SORTED(S2[LEFT:RIGHT+1]) GOT MY CODE FROM 1800 MS TO 150MS.\n         \"\"\"",
        "\"%s schedule\"",
        "'zz'",
        "'bcdEfghIjklmnOpqrstUvwxyzA'",
        "'Eleven'",
        "'[\\s]'",
        "'three'",
        "\"fries\"",
        "\"1459\"",
        "\"74\"",
        "\"Six\"",
        "'sandwich'",
        "\"March\"",
        "\"v\"",
        "'Coke'",
        "r'[^A-Za-z\\s]'",
        "\"~\"",
        "'math'",
        "\" Fries\"",
        "'Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec'",
        "\"yes\"",
        "\"August\"",
        "'abcdefghijklmnopqrstuvwxyz'",
        "'[S]{10}'",
        "'y'",
        "\"s\"",
        "\"\"\"[i,j)\u306b\u542b\u307e\u308c\u306a\u3044\u6587\u5b57\u306e\u3046\u3061\u306e\u6700\u5c0f\n    \"\"\"",
        "'Sixty'",
        "\"June\"",
        "'ten'",
        "\"89178156\"",
        "'//adf.ly/go.php?u='",
        "\"NSEW\"",
        "'two'",
        "\"92\"",
        "f'You are {c-x} ahead of schedule!'",
        "'l'",
        "\";\"",
        "'-inf'",
        "\"It's hotter than the sun!!\"",
        "'sack'",
        "'Seventeen'",
        "\"9\"",
        "'des'",
        "\"12https://adf.ly/go.php?u=\"",
        "\")\"",
        "'symmetric_difference_update'",
        "r\"(Ha)+|(ha)+\"",
        "\"Milkshake\"",
        "'ascending'",
        "f\"{'_' * (2*i-1):#^{2*i+1}}\"",
        "'unsorted'",
        "'{0:0%sb}'",
        "'September'",
        "\"Sandwich\"",
        "'four'",
        "\"u\"",
        "\"3257\"",
        "'I'",
        "\"\"\"Builds a gradient description\"\"\"",
        "\"\"\"\nWriter: SPD_9X2\nhttps://atcoder.jp/contests/arc081/tasks/arc081_c\n\n1\u6587\u5b57\u304c\u3042\u308a\u3046\u308b\u306e\u306f\u3001\u51fa\u3066\u306a\u3044\u6587\u5b57\u304c\u3042\u308b\u3068\u304d\n2\u6587\u5b57\u304c\u3042\u308a\u3046\u308b\u306e\u306f\u3001\u5168\u3066\u306e\u6587\u5b57\u304c1\u5ea6\u51fa\u305f\u306e\u3061\u3001\u3082\u3046\u4e00\u5ea6\u3059\u3079\u3066\u306e\u6587\u5b57\u304c1\u5ea6\u73fe\u308c\u3066\u306a\u3044\u5834\u5408\n\u3064\u307e\u308a\u7b54\u3048\u306e\u6587\u5b57\u6570\u306f\u3053\u306e\u65b9\u6cd5\u3067\u5206\u304b\u308b\n\n\u3067\u306f\u8f9e\u66f8\u9806\u6700\u5c0f\u306e\u3082\u306e\u306f\uff1f\nk\u6587\u5b57\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u3066\u3044\u305f\u3068\u3059\u308b\u3002\n\u3053\u306e\u6642\u3001\u3069\u306e\u6587\u5b57\u3082\u6700\u4f4ek-1\u56de\u51fa\u73fe\u3057\u3066\u3044\u308b\n\u6700\u5f8c\u306e\u6587\u5b57\u306f\u3001k\u56de\u51fa\u73fe\u3057\u3066\u306a\u3044\u6587\u5b57\u306e\u5185\u3001\u8f9e\u66f8\u9806\u6700\u5c0f\u306e\u7269\n\u6700\u5f8c\u304b\u30891\u756a\u76ee\u306f\u3001k-1\u56de\u76ee\u306e\u51fa\u73fe\u306e\u5f8c\u3001\u6700\u5f8c\u306e\u6587\u5b57\u304c\u51fa\u3066\u3044\u306a\u3044\u8005\n\u6700\u5f8c\u304b\u30892\u756a\u76ee\u306f\u3001\n\nabc\u306e3\u6587\u5b57\u3057\u304b\u306a\u3044\u3068\u3059\u308b\nabababababcab\n\n\u2192\u3053\u306e\u6642\u3001\u6c42\u3081\u308b\u306e\u306f\u3001?c\u3067\u3001?\u306fc\u6700\u5f8c\u306b\u51fa\u73fe\u3059\u308bc\u3088\u308a\u3082\u524d\u306b\u5b58\u5728\u3057\u306a\u3044k-1\u6587\u5b57\u306e\u8f9e\u66f8\u9806\u6700\u5c0f\n\nabcabcab\n\u2192??c\n\u2192\u6700\u5f8c\u306e\u51fa\u73fe\u3059\u308bc\u4ee5\u524d=abcab\u4ee5\u524d\u3067\u5b58\u5728\u3057\u306a\u30442\u6587\u5b57\n\u2192?cc\n\u2192ab\u3067\u5b58\u5728\u3057\u306a\u30441\u6587\u5b57\n\u2192ccc\n\nacbaccbac\n\u2192\u7d50\u5c40\u518d\u5e30\u7684\u306b\u89e3\u3051\u308b\n\u2192\u51fa\u73fe\u56de\u6570\u304c\u6700\u5c0f\u306e\u6587\u5b57\u306e\u3046\u3061\u3001\u8f9e\u66f8\u9806\u6700\u5c0f\u306e\u7269\u3092\u7b54\u3048\u306e\u6700\u5f8c\u306e\u6587\u5b57\u304b\u3089\u6c7a\u3081\u3066\u3044\u304d\u3001\u305d\u306e\u6587\u5b57\u304c\u6700\u5f8c\u306e\u51fa\u73fe\u3057\u305find\n\u3088\u308a\u524d\u306b\u95a2\u3057\u3066\u3001\u540c\u3058\u554f\u984c\u3092\u89e3\u304f\n\n\u3042\u3068\u306f\u3069\u3046\u3084\u3063\u3066\u8a08\u7b97\u91cf\u3092\u524a\u6e1b\u3059\u308b\u304b\n\u305d\u306e\u6642\u70b9\u3067\u3001\u3069\u306e\u6587\u5b57\u304c\u4f55\u5ea6\u51fa\u305f\u304b\u3001\u6700\u5f8c\u306e\u51fa\u73fe\u3057\u305findex\u306f\u3069\u3053\u304b\u3001\u3092\u8a18\u9332\u3057\u3066\u7f6e\u3044\u3066\u518d\u5e30\u7684\u306b\u89e3\u304f\n\n\u2192\u65b9\u91dd\u306f\u5408\u3063\u3066\u308b\uff1f\u3051\u3069\u5b9f\u88c5\u3057\u3066\u308b\u306e\u304c\u9055\u3046\u3088\uff01\n\u4fdd\u5b58\u3057\u3066\u304a\u304f\u306e\u306f\u3001\u5168\u3066\u306e\u6587\u5b57\u304c\u4f55\u56de\u51fa\u63c3\u3063\u305f\u304b\u3001\u3068\u305d\u306e\u5f8c\u3069\u306e\u6587\u5b57\u304c\u51fa\u3066\u3044\u308b\u304b\u3002\n&\u5404\u6587\u5b57\u304c\u6700\u5f8c\u306b\u3069\u3053\u3067\u51fa\u305f\u304b\u3002\n\n\u3042\u308c\u30fc\uff1f\naaaaaabbbbbbc\n\n\u2192\u554f\u984c\u306f\u3001\u5fc5\u305a\u3057\u3082\u5f8c\u308d\u304b\u3089\u6700\u9069\u306a\u306e\u3092\u9078\u3093\u3067\u884c\u3051\u3070\u3044\u3044\u308f\u3051\u3067\u306f\u306a\u304b\u3063\u305f\u3053\u3068\n\u2192\u3053\u308c\u306f\u3042\u304f\u307e\u3067\u3001\u5f8c\u308d\u304b\u3089\u898b\u3066\u8f9e\u66f8\u9806\u6700\u5c0f\u3067\u3057\u304b\u306a\u3044\u2026\u3042\u308c\u307e\u3055\u304b\uff1f\n\u2192\u6b63\u89e3\u3057\u3061\u3083\u3063\u305f\u30fc\uff1f\uff1f\uff1f\n\"\"\"",
        "\"\\n%d\"",
        "\"4591\"",
        "\"{:.2}\"",
        "\"U\"",
        "f\"You are {-delta} behind schedule.\"",
        "'You are on track.'",
        "\"(\"",
        "';-)'",
        "'''\n\n\n\n\n\ndef sortmax():\n\n\tv = lst[-1]\n\n\ti = n-2\n\n\twhile(i>=0):\n\n\t\tif lst[i]<=v:\n\n\t\t\tlst[-1]=lst[i+1]\n\n\t\t\tlst[i+1]=v\n\n\t\t\treturn\n\n\t\ti-=1\n\n\tlst[-1]=lst[0]\n\n\tlst[0]=v\n\n\n\ndef sortmin():\n\n\tv = lst[0]\n\n\ti = 1\n\n\twhile(i<n):\n\n\t\tif lst[i]>=v:\n\n\t\t\tlst[0]=lst[i-1]\n\n\t\t\tlst[i-1]=v\n\n\t\t\treturn\n\n\t\ti+=1\n\n\tlst[0]=lst[-1]\n\n\tlst[-1]=v\n\n\n\n\n\nlst.sort()\n\nwhile k:\n\n\tlst[-1]-=1\n\n\tsortmax()\n\n\t#print(lst)\n\n\tlst[0]+=1\n\n\tsortmin()\n\n\tif (lst[-1]-lst[0])<=1:\n\n\t\tbreak\n\n\t#print(lst)\n\n\tk-=1\n\n\n\n\n\nprint(lst[-1]-lst[0])\n\n\n\n\n\n'''",
        "\"\"\"\n    1-indexed Segment Tree\n    \"\"\"",
        "f\"{random.randint(0,99):02d}{PREFIX}{base64.b64encode(url.encode('utf-8')).decode('utf-8')}\"",
        "\"\"\"\n  \u957f\u5ea6\u4e3an\u7684\u5b57\u7b26\u4e32\uff0c\u7b2ci\u4e2a\u4f4d\u7f6e\u4e0a\u4e3aO\u7684\u6982\u7387\u4e3api\uff0c\u5426\u5219\u4e3ax\n  \u5b57\u7b26\u4e32\u7684\u5f97\u5206\u4e3a\u8fde\u7eedO\u7684\u6570\u91cf\u7684\u5e73\u65b9\u548c\n  \u5982\"OOXXOOOXOO\"\u7684\u5f97\u5206\u4e3a4+9+4=17\n  \u95ee\u5f97\u5206\u671f\u671b\n  Di\u4e3a\u5230i\u4f4d\u7f6e\u8fde\u7eedO\u7684\u671f\u671b\uff0cEi\u4e3a\u5230i\u4f4d\u7f6e\u7684\u5f97\u5206\u671f\u671b\n  Di = (D[i-1]+1)*pi\n  Ei = E[i-1] + Pi * (2D[i-1] + 1)\n\"\"\"",
        "\"all\"",
        "\"<\"",
        "\"L\"",
        "\"112\"",
        "' thousand'",
        "'i'",
        "'Thirty'",
        "f\"It's hotter than the sun!!\"",
        "\"q\"",
        "'rr'",
        "'1 1'",
        "'_'",
        "\"57\"",
        "f\"You are {val} ahead of schedule!\"",
        "'r'",
        "\"145\"",
        "'''\n    X = 2**N\n    print '2^%d=%d' % (N, X)\n    X = map(int, str(X))\n    print '%s=%d' % ('+'.join(map(str, X)), sum(X))\n    '''",
        "\"\"\" Get a message based on squared `x` parameter. \"\"\"",
        "\"94\"",
        "'green'",
        "'Eighty'",
        "' million'",
        "'q'",
        "'ll'",
        "\"S\"",
        "\"a\"",
        "\"639\"",
        "'June'",
        "\" Burger\"",
        "\"_\"",
        "\"no\"",
        "'coke'",
        "\"descending\"",
        "\"Incorrect input\"",
        "'Pizza'",
        "\"N\"",
        "'sample.ans'",
        "\"77\"",
        "'0.28'",
        "'''\n    receives:\n    - content of gas in ml.\n    - percentaje of content lost every day.\n    - threshold as a percentage of the original capacity below which the cooler does not work.\n    \n    returns:\n    - the nth day on which the evaporator will be out of use.\n    '''",
        "'we'",
        "'x'",
        "\"\"\"\nCode Chef :: December 2020 Lunchtime :: Even Sequence Problem Code: EVSTR\nhttps://www.codechef.com/LTIME91B/problems/EVSTR\n\"\"\"",
        "'b+'",
        "'yes, descending'",
        "\"Pizza\"",
        "'Hah'",
        "\"4\"",
        "'8'",
        "\"4610\"",
        "\"one\"",
        "\"m and n should be int\"",
        "\"$\"",
        "'It\\'s hotter than the sun!!'",
        "'96https://adf.ly/go.php?u='",
        "'bumpy'",
        "\"NO\"",
        "'pass'",
        "\", \"",
        "\"88167\"",
        "f\"{sequence}{sum(int(n) for n in sequence[-2:])}\"",
        "\"0.33\"",
        "\"0\""
    ],
    "float": [
        ".5",
        "0.0",
        "0.7",
        "0.2617993878",
        "100.0",
        "31.622776601683793",
        "3.0",
        "1e5",
        "100.00",
        "10e9",
        "1e-3",
        "100.",
        "1e3",
        "0.5",
        "0.01",
        "1.0",
        "12.0",
        "2.0",
        "1000.0",
        "0.2",
        "3.14159265359",
        "1e6"
    ]
}