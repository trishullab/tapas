[$Grammar("Module","Module"), [$Grammar("statements","ConsStmt"), [$Grammar("stmt","Assign"), [$Grammar("target_exprs","SingleTargetExpr"), [$Grammar("expr","Name"), [$Vocab("identifier","R"), [$Grammar("expr","Integer"), [$Vocab("integer","3"), [$Grammar("statements","ConsStmt"), [$Grammar("stmt","Assign"), [$Grammar("target_exprs","SingleTargetExpr"), [$Grammar("expr","Name"), [$Vocab("identifier","C"), [$Grammar("expr","Integer"), [$Vocab("integer","3"), [$Grammar("statements","SingleStmt"), [$Grammar("stmt","DecFunctionDef"), [$Grammar("decorators","NoDec"), [$Grammar("function_def","FunctionDef"), [$Vocab("identifier","min_cost"), [$Grammar("parameters","ParamsB"), [$Grammar("parameters_b","ConsParam"), [$Grammar("Param","Param"), [$Vocab("identifier","cost"), [$Grammar("param_type","NoParamType"), [$Grammar("param_default","NoParamDefault"), [$Grammar("parameters_b","ConsParam"), [$Grammar("Param","Param"), [$Vocab("identifier","m"), [$Grammar("param_type","NoParamType"), [$Grammar("param_default","NoParamDefault"), [$Grammar("parameters_b","SingleParam"), [$Grammar("Param","Param"), [$Vocab("identifier","n"), [$Grammar("param_type","NoParamType"), [$Grammar("param_default","NoParamDefault"), [$Grammar("return_type","NoReturnType"), [$Grammar("statements","ConsStmt"), [$Grammar("stmt","Assign"), [$Grammar("target_exprs","SingleTargetExpr"), [$Grammar("expr","Name"), [$Vocab("identifier","tc"), [$Grammar("expr","ListComp"), [$Grammar("expr","ListComp"), [$Grammar("expr","Integer"), [$Vocab("integer","0"), [$Grammar("comprehension_constraints","SingleConstraint"), [$Grammar("constraint","Constraint"), [$Grammar("expr","Name"), [$Vocab("identifier","x"), [$Grammar("expr","CallArgs"), [$Grammar("expr","Name"), [$Vocab("identifier","range"), [$Grammar("arguments","SingleArg"), [$Grammar("expr","Name"), [$Vocab("identifier","C"), [$Grammar("constraint_filters","NoFilter"), [$Grammar("comprehension_constraints","SingleConstraint"), [$Grammar("constraint","Constraint"), [$Grammar("expr","Name"), [$Vocab("identifier","x"), [$Grammar("expr","CallArgs"), [$Grammar("expr","Name"), [$Vocab("identifier","range"), [$Grammar("arguments","SingleArg"), [$Grammar("expr","Name"), [$Vocab("identifier","R"), [$Grammar("constraint_filters","NoFilter"), [$Grammar("statements","ConsStmt"), [$Grammar("stmt","Assign"), [$Grammar("target_exprs","SingleTargetExpr"), [$Grammar("expr","Subscript"), [$Grammar("expr","Subscript"), [$Grammar("expr","Name"), [$Vocab("identifier","tc"), [$Grammar("expr","Integer"), [$Vocab("integer","0"), [$Grammar("expr","Integer"), [$Vocab("integer","0"), [$Grammar("expr","Subscript"), [$Grammar("expr","Subscript"), [$Grammar("expr","Name"), [$Vocab("identifier","cost"), [$Grammar("expr","Integer"), [$Vocab("integer","0"), [$Grammar("expr","Integer"), [$Vocab("integer","0"), [$Grammar("statements","ConsStmt"), [$Grammar("stmt","For"), [$Grammar("expr","Name"), [$Vocab("identifier","i"), [$Grammar("expr","CallArgs"), [$Grammar("expr","Name"), [$Vocab("identifier","range"), [$Grammar("arguments","ConsArg"), [$Grammar("expr","Integer"), [$Vocab("integer","1"), [$Grammar("arguments","SingleArg"), [$Grammar("expr","BinOp"), [$Grammar("expr","Name"), [$Vocab("identifier","m"), [$Grammar("operator","Add"), [$Grammar("expr","Integer"), [$Vocab("integer","1"), [$Grammar("statements","SingleStmt"), [$Grammar("stmt","Assign"), [$Grammar("target_exprs","SingleTargetExpr"), [$Grammar("expr","Subscript"), [$Grammar("expr","Subscript"), [$Grammar("expr","Name"), [$Vocab("identifier","tc"), [$Grammar("expr","Name"), [$Vocab("identifier","i"), [$Grammar("expr","Integer"), [$Vocab("integer","0"), [$Grammar("expr","BinOp"), [$Grammar("expr","Subscript"), [$Grammar("expr","Subscript"), [$Grammar("expr","Name"), [$Vocab("identifier","tc"), [$Grammar("expr","BinOp"), [$Grammar("expr","Name"), [$Vocab("identifier","i"), [$Grammar("operator","Sub"), [$Grammar("expr","Integer"), [$Vocab("integer","1"), [$Grammar("expr","Integer"), [$Vocab("integer","0"), [$Grammar("operator","Add"), [$Grammar("expr","Subscript"), [$Grammar("expr","Subscript"), [$Grammar("expr","Name"), [$Vocab("identifier","cost"), [$Grammar("expr","Name"), [$Vocab("identifier","i"), [$Grammar("expr","Integer"), [$Vocab("integer","0"), [$Grammar("statements","ConsStmt"), [$Grammar("stmt","For"), [$Grammar("expr","Name"), [$Vocab("identifier","j"), [$Grammar("expr","CallArgs"), [$Grammar("expr","Name"), [$Vocab("identifier","range"), [$Grammar("arguments","ConsArg"), [$Grammar("expr","Integer"), [$Vocab("integer","1"), [$Grammar("arguments","SingleArg"), [$Grammar("expr","BinOp"), [$Grammar("expr","Name"), [$Vocab("identifier","n"), [$Grammar("operator","Add"), [$Grammar("expr","Integer"), [$Vocab("integer","1"), [$Grammar("statements","SingleStmt"), [$Grammar("stmt","Assign"), [$Grammar("target_exprs","SingleTargetExpr"), [$Grammar("expr","Subscript"), [$Grammar("expr","Subscript"), [$Grammar("expr","Name"), [$Vocab("identifier","tc"), [$Grammar("expr","Integer"), [$Vocab("integer","0"), [$Grammar("expr","Name"), [$Vocab("identifier","j"), [$Grammar("expr","BinOp"), [$Grammar("expr","Subscript"), [$Grammar("expr","Subscript"), [$Grammar("expr","Name"), [$Vocab("identifier","tc"), [$Grammar("expr","Integer"), [$Vocab("integer","0"), [$Grammar("expr","BinOp"), [$Grammar("expr","Name"), [$Vocab("identifier","j"), [$Grammar("operator","Sub"), [$Grammar("expr","Integer"), [$Vocab("integer","1"), [$Grammar("operator","Add"), [$Grammar("expr","Subscript"), [$Grammar("expr","Subscript"), [$Grammar("expr","Name"), [$Vocab("identifier","cost"), [$Grammar("expr","Integer"), [$Vocab("integer","0"), [$Grammar("expr","Name"), [$Vocab("identifier","j"), [$Grammar("statements","ConsStmt"), [$Grammar("stmt","For"), [$Grammar("expr","Name"), [$Vocab("identifier","i"), [$Grammar("expr","CallArgs"), [$Grammar("expr","Name"), [$Vocab("identifier","range"), [$Grammar("arguments","ConsArg"), [$Grammar("expr","Integer"), [$Vocab("integer","1"), [$Grammar("arguments","SingleArg"), [$Grammar("expr","BinOp"), [$Grammar("expr","Name"), [$Vocab("identifier","m"), [$Grammar("operator","Add"), [$Grammar("expr","Integer"), [$Vocab("integer","1"), [$Grammar("statements","SingleStmt"), [$Grammar("stmt","For"), [$Grammar("expr","Name"), [$Vocab("identifier","j"), [$Grammar("expr","CallArgs"), [$Grammar("expr","Name"), [$Vocab("identifier","range"), [$Grammar("arguments","ConsArg"), [$Grammar("expr","Integer"), [$Vocab("integer","1"), [$Grammar("arguments","SingleArg"), [$Grammar("expr","BinOp"), [$Grammar("expr","Name"), [$Vocab("identifier","n"), [$Grammar("operator","Add"), [$Grammar("expr","Integer"), [$Vocab("integer","1"), [$Grammar("statements","SingleStmt"), [$Grammar("stmt","Assign"), [$Grammar("target_exprs","SingleTargetExpr"), [$Grammar("expr","Subscript"), [$Grammar("expr","Subscript"), [$Grammar("expr","Name"), [$Vocab("identifier","tc"), [$Grammar("expr","Name"), [$Vocab("identifier","i"), [$Grammar("expr","Name"), [$Vocab("identifier","j"), [$Grammar("expr","BinOp"), [$Grammar("expr","CallArgs"), [$Grammar("expr","Name"), [$Vocab("identifier","min"), [$Grammar("arguments","ConsArg"), [$Grammar("expr","Subscript"), [$Grammar("expr","Subscript"), [$Grammar("expr","Name"), [$Vocab("identifier","tc"), [$Grammar("expr","BinOp"), [$Grammar("expr","Name"), [$Vocab("identifier","i"), [$Grammar("operator","Sub"), [$Grammar("expr","Integer"), [$Vocab("integer","1"), [$Grammar("expr","BinOp"), [$Grammar("expr","Name"), [$Vocab("identifier","j"), [$Grammar("operator","Sub"), [$Grammar("expr","Integer"), [$Vocab("integer","1"), [$Grammar("arguments","ConsArg"), [$Grammar("expr","Subscript"), [$Grammar("expr","Subscript"), [$Grammar("expr","Name"), [$Vocab("identifier","tc"), [$Grammar("expr","BinOp"), [$Grammar("expr","Name"), [$Vocab("identifier","i"), [$Grammar("operator","Sub"), [$Grammar("expr","Integer"), [$Vocab("integer","1"), [$Grammar("expr","Name"), [$Vocab("identifier","j"), [$Grammar("arguments","SingleArg"), [$Grammar("expr","Subscript"), [$Grammar("expr","Subscript"), [$Grammar("expr","Name"), [$Vocab("identifier","tc"), [$Grammar("expr","Name"), [$Vocab("identifier","i"), [$Grammar("expr","BinOp"), [$Grammar("expr","Name"), [$Vocab("identifier","j"), [$Grammar("operator","Sub"), [$Grammar("expr","Integer"), [$Vocab("integer","1"), [$Grammar("operator","Add"), [$Grammar("expr","Subscript"), [$Grammar("expr","Subscript"), [$Grammar("expr","Name"), [$Vocab("identifier","cost"), [$Grammar("expr","Name"), [$Vocab("identifier","i"), [$Grammar("expr","Name"), [$Vocab("identifier","j"), [$Grammar("statements","SingleStmt"), [$Grammar("stmt","ReturnSomething"), [$Grammar("expr","Subscript"), [$Grammar("expr","Subscript"), [$Grammar("expr","Name"), [$Vocab("identifier","tc"), [$Grammar("expr","Name"), [$Vocab("identifier","m"), [$Grammar("expr","Name"), [$Vocab("identifier","n"), nil]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]